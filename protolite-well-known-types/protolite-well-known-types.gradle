// Copyright 2018 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

plugins {
    id("com.android.library")
    id('com.google.protobuf')
    id('maven-publish')
}

// Load version from properties file
def props = new Properties()
file('../firebase-inappmessaging/gradle.properties').withInputStream { props.load(it) }
version = props.getProperty('version', '0.0.0')

android {
    namespace "firebase.com.protolitewrapper"
    compileSdkVersion project.compileSdkVersion
    defaultConfig {
        targetSdkVersion project.targetSdkVersion
        minSdkVersion project.minSdkVersion
        versionCode 1
        versionName '1.0'
        consumerProguardFiles 'proguard-rules.pro'
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    sourceSets.main.resources.srcDirs = ['build/extracted-protos/main/', 'src/main/proto']
}

protobuf {
    protoc {
        artifact = libs.protoc.get().toString()
    }
    generateProtoTasks {
        all().each { task ->
            task.addIncludeDir(files('fix-javalite/proto'))
            task.builtins {
                java {
                    option "lite"
                }
            }
        }
    }
}

// Create sources JAR task
tasks.register('sourcesJar', Jar) {
    from android.sourceSets.main.java.srcDirs
    archiveClassifier.set('sources')
    dependsOn('compileReleaseJavaWithJavac')
}

// Create empty Javadoc JAR to satisfy Maven Central requirements
tasks.register('javadocJar', Jar) {
    archiveClassifier.set('javadoc')
}

// Setup publishing
publishing {
    publications {
        release(MavenPublication) {
            groupId = 'com.github.AhmedNader65'
            artifactId = 'protolite-well-known-types'
            version = project.version

            afterEvaluate {
                // The main artifact - the AAR file
                artifact(layout.buildDirectory.file("outputs/aar/${project.name}-release.aar"))
            }

            // Add sources and javadoc artifacts
            artifact(tasks.named('sourcesJar'))
            artifact(tasks.named('javadocJar'))

            // POM information
            pom {
                name = 'Protolite Well Known Types'
                description = 'Protocol Buffer library with well known types'
                url = 'https://github.com/AhmedNader65/firebase-android-sdk'

                licenses {
                    license {
                        name = 'The Apache License, Version 2.0'
                        url = 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                    }
                }

                developers {
                    developer {
                        id = 'ahmednader65'
                        name = 'Ahmed Nader'
                    }
                }
            }
        }
    }
}

// Make sure the AAR is built before publishing
tasks.withType(AbstractPublishToMaven).configureEach {
    dependsOn tasks.named('assembleRelease')
}

dependencies {
    protobuf(libs.proto.google.common.protos){
        exclude group: "com.google.protobuf", module: "protobuf-java"
    }

    implementation libs.protobuf.java.lite
}